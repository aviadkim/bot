{"version":3,"sources":["components/Chat.js","App.js","index.js"],"names":["Chat","messages","setMessages","useState","input","setInput","sendMessage","async","trim","userMessage","role","content","response","fetch","method","headers","body","JSON","stringify","message","botMessage","json","prev","error","console","_jsxs","children","_jsx","map","msg","index","type","value","onChange","e","target","onKeyPress","key","onClick","App","className","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"yMA4CeA,MA1Cf,WACE,MAAOC,EAAUC,GAAeC,mBAAS,KAClCC,EAAOC,GAAYF,mBAAS,IAE7BG,EAAcC,UAClB,GAAqB,KAAjBH,EAAMI,OAAe,OACzB,MAAMC,EAAc,CAAEC,KAAM,OAAQC,QAASP,GAC7CF,EAAY,IAAID,EAAUQ,IAC1BJ,EAAS,IAET,IACE,MAAMO,QAAiBC,MAAM,QAAS,CACpCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEC,QAASf,MAG5BgB,EAAa,CAAEV,KAAM,MAAOC,eADfC,EAASS,QACoBF,SAChDjB,GAAaoB,GAAS,IAAIA,EAAMF,IAClC,CAAE,MAAOG,GACPC,QAAQD,MAAM,SAAUA,EAC1B,GAGF,OACEE,eAAA,OAAAC,SAAA,CACEC,cAAA,OAAAD,SACGzB,EAAS2B,KAAI,CAACC,EAAKC,IAClBL,eAAA,KAAAC,SAAA,CAAeD,eAAA,UAAAC,SAAA,CAASG,EAAInB,KAAK,OAAU,IAAEmB,EAAIlB,UAAzCmB,OAGZH,cAAA,SACEI,KAAK,OACLC,MAAO5B,EACP6B,SAAWC,GAAM7B,EAAS6B,EAAEC,OAAOH,OACnCI,WAAaF,GAAgB,UAAVA,EAAEG,KAAmB/B,MAE1CqB,cAAA,UAAQW,QAAShC,EAAYoB,SAAC,WAGpC,E,MCzBea,MAbf,WACE,OACEd,eAAA,OAAKe,UAAU,MAAKd,SAAA,CAClBC,cAAA,UAAQa,UAAU,aAAYd,SAC5BC,cAAA,MAAAD,SAAI,+BAENC,cAAA,QAAAD,SACEC,cAAC3B,EAAI,QAIb,ECVayC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlB,cAACmB,IAAMC,WAAU,CAAArB,SACfC,cAACY,EAAG,M","file":"static/js/main.be0dbd85.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    if (input.trim() === '') return;\n    const userMessage = { role: 'user', content: input };\n    setMessages([...messages, userMessage]);\n    setInput('');\n\n    try {\n      const response = await fetch('/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: input }),\n      });\n      const data = await response.json();\n      const botMessage = { role: 'bot', content: data.message };\n      setMessages((prev) => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    };\n\n  return (\n    <div>\n      <div>\n        {messages.map((msg, index) => (\n          <p key={index}><strong>{msg.role}:</strong> {msg.content}</p>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default Chat;","import React from 'react';\nimport Chat from './components/Chat';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Customer Service Chatbot</h1>\n      </header>\n      <main>\n        <Chat />\n      </main>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}